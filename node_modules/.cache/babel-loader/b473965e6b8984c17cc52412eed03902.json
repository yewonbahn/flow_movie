{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\banya\\\\flow_movie\\\\src\\\\App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"WEB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 8\n          }, this), \"world wide web!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n            id: movie.id,\n            year: movie.year,\n            title: movie.title,\n            summary: movie.summary,\n            poster: movie.medium_cover_image,\n            genres: movie.genres\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/banya/flow_movie/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;;;AACA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIF,MAAMN,KAAK,CAACS,GAAN,CACR,0DADQ,CAJV;AAOA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAd+B;AAAA;;AAehCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACD;;AACDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBAEE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBACGC,SAAS,gBAGR;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHQ,gBAQR;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACC;AAAA,kCACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAKE;AAAA,oBACCC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBAEf,QAAC,KAAD;AAEE,YAAA,EAAE,EAAEA,KAAK,CAACC,EAFZ;AAGE,YAAA,IAAI,EAAED,KAAK,CAACE,IAHd;AAIE,YAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,YAAA,OAAO,EAAEH,KAAK,CAACI,OALjB;AAME,YAAA,MAAM,EAAEJ,KAAK,CAACK,kBANhB;AAOE,YAAA,MAAM,EAAEL,KAAK,CAACM;AAPhB,aACON,KAAK,CAACC,EADb;AAAA;AAAA;AAAA;AAAA,kBAFD;AADD;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAiCD;;AArD+B;;AAuDlC,eAAeb,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      \n      <section className=\"container\">\n        {isLoading ? (\n\n\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          \n          <div className=\"movies\">\n           <header>\n\t      <h1>WEB</h1>\n\t      world wide web!\n            </header>\n            <body>\n            {movies.map(movie => (\n              \n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}</body>\n          </div>\n        )}\n      </section>\n    );\n  }\n}\nexport default App;                   \n"]},"metadata":{},"sourceType":"module"}