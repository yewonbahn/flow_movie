{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\banya\\\\flow_movie\\\\src\\\\App.js\";\nimport React from 'react';\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n\n    this.add = () => {\n      this.setState(current => ({\n        count: current.count + 1\n      }));\n    };\n\n    this.minus = () => {\n      this.setState(current => ({\n        count: current.count - 1\n      }));\n    };\n\n    console.log(\"hello\");\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isLoading ? \"Loading\" : \"We are ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/banya/flow_movie/src/App.js"],"names":["React","propTypes","App","Component","constructor","props","state","isLoading","add","setState","current","count","minus","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAIA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAIlBC,KAJkB,GAIZ;AACJC,MAAAA,SAAS,EAAG;AADR,KAJY;;AAAA,SAOlBC,GAPkB,GAOZ,MAAM;AACV,WAAKC,QAAL,CAAcC,OAAO,KAAK;AAACC,QAAAA,KAAK,EAACD,OAAO,CAACC,KAAR,GAAgB;AAAvB,OAAL,CAArB;AACD,KATiB;;AAAA,SAUlBC,KAVkB,GAUV,MAAM;AACZ,WAAKH,QAAL,CAAcC,OAAO,KAAK;AAACC,QAAAA,KAAK,EAACD,OAAO,CAACC,KAAR,GAAgB;AAAvB,OAAL,CAArB;AACD,KAZiB;;AAEhBE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAUDC,EAAAA,MAAM,GAAE;AACN,UAAK;AAACR,MAAAA;AAAD,QAAY,KAAKD,KAAtB;AAEA,wBAAO;AAAA,gBAAM,KAAKA,KAAL,CAAWC,SAAX,GAAuB,SAAvB,GAAkC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AApB8B;;AAuBjC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport propTypes from \"prop-types\";\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    console.log(\"hello\");\n  }\n  state={\n    isLoading : true\n  };\n  add = () => {\n    this.setState(current => ({count:current.count + 1}) );\n  };\n  minus = () => {\n    this.setState(current => ({count:current.count - 1}) );\n  };\n  render(){\n    const{isLoading}=this.state;\n    \n    return <div>{this.state.isLoading ? \"Loading\" :\"We are ready\"}\n    \n    </div>\n  }\n}                   \n\nexport default App;                        \n"]},"metadata":{},"sourceType":"module"}