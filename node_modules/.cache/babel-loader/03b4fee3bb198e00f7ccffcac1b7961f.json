{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\banya\\\\flow_movie\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image,\n          genres: movie.genres\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/banya/flow_movie/src/App.js"],"names":["App","React","Component","state","isLoading","movies","getMovies","data","axios","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image","genres"],"mappings":";AAAA,OAAO,WAAP;;;AACA,MAAMA,GAAN,SAAkBC,KAAK,CAACC,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAKhCC,SALgC,GAKpB,YAAY;AACtB,YAAM;AACJC,QAAAA,IAAI,EAAE;AACJA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADF;AADF,UAIF,MAAMG,KAAK,CAACC,GAAN,CACR,0DADQ,CAJV;AAOA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACD,KAd+B;AAAA;;AAehCO,EAAAA,iBAAiB,GAAE;AACjB,SAAKL,SAAL;AAGD;;AACDM,EAAAA,MAAM,GAAE;AACN,UAAK;AAACR,MAAAA,SAAD;AAAWC,MAAAA;AAAX,QAAmB,KAAKF,KAA7B;AAEA,wBAAQ;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,gBAAgCC,SAAS,gBACjD;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADiD,gBAM/C;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGC,MAAM,CAACQ,GAAP,CAAWC,KAAK,iBACrB,QAAC,KAAD;AACA,UAAA,EAAE,EAAEA,KAAK,CAACC,EADV;AAEA,UAAA,IAAI,EAAED,KAAK,CAACE,IAFZ;AAGA,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHb;AAIA,UAAA,OAAO,EAAEH,KAAK,CAACI,OAJf;AAKA,UAAA,MAAM,EAAEJ,KAAK,CAACK,kBALd;AAMA,UAAA,MAAM,EAAEL,KAAK,CAACM;AANd,WAAYN,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADK;AADH;AAAA;AAAA;AAAA;AAAA;AANM;AAAA;AAAA;AAAA;AAAA,YAAR;AAsBD;;AA7C+B;;AA+ClC,eAAef,GAAf","sourcesContent":["import \"./App.css\";\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount(){\n    this.getMovies();\n\n    \n  }\n  render(){\n    const{isLoading,movies}=this.state;\n\n    return( <section className=\"container\">{isLoading ? (\n    <div className=\"loader\">\n      <span className=\"loader__text\">Loading..</span>\n\n    </div> )\n    :(\n      <div className=\"movies\">\n        {movies.map(movie =>(\n    <Movie key={movie.id}\n    id={movie.id} \n    year={movie.year} \n    title={movie.title} \n    summary={movie.summary} \n    poster={movie.medium_cover_image}\n    genres={movie.genres}\n    />\n        ))}\n    \n    </div>\n    )}\n    </section>\n    );\n  }\n  }\nexport default App;                        \n"]},"metadata":{},"sourceType":"module"}