{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\banya\\\\flow_movie\\\\src\\\\App.js\";\nimport React from 'react';\nimport propTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n      this.setState({\n        movies: movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader__text\",\n          children: \"Loading..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.title,\n          summary: movie.summary,\n          poster: movie.medium_cover_image\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/banya/flow_movie/src/App.js"],"names":["React","propTypes","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","id","year","title","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEzB;AACJC,MAAAA,SAAS,EAAG,IADR;AAEJC,MAAAA,MAAM,EAAC;AAFH,KAFyB;;AAAA,SAM/BC,SAN+B,GAMrB,YAAS;AACjB,YAAM;AAACC,QAAAA,IAAI,EAAC;AAACA,UAAAA,IAAI,EAAC;AAACF,YAAAA;AAAD;AAAN;AAAN,UAAwB,MAAMN,KAAK,CAACS,GAAN,CAAU,uDAAV,CAApC;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAACA,MAAR;AAAeD,QAAAA,SAAS,EAAC;AAAzB,OAAd;AAGD,KAX8B;AAAA;;AAY/BM,EAAAA,iBAAiB,GAAE;AACjB,SAAKJ,SAAL;AAGD;;AACDK,EAAAA,MAAM,GAAE;AACN,UAAK;AAACP,MAAAA,SAAD;AAAWC,MAAAA;AAAX,QAAmB,KAAKF,KAA7B;AAEA,wBAAQ;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,gBAA4BC,SAAS,gBAC7C;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,+BACE;AAAM,UAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAD6C,gBAM3C;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,kBACGC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACrB,QAAC,KAAD;AACA,UAAA,EAAE,EAAEA,KAAK,CAACC,EADV;AAEA,UAAA,IAAI,EAAED,KAAK,CAACE,IAFZ;AAGA,UAAA,KAAK,EAAEF,KAAK,CAACG,KAHb;AAIA,UAAA,OAAO,EAAEH,KAAK,CAACI,OAJf;AAKA,UAAA,MAAM,EAAEJ,KAAK,CAACK;AALd,WAAYL,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADK;AADH;AAAA;AAAA;AAAA;AAAA;AANM;AAAA;AAAA;AAAA;AAAA,YAAR;AAmBE;;AAvC2B;;AAyCjC,eAAeb,GAAf","sourcesContent":["import React from 'react';\nimport propTypes from \"prop-types\";\nimport axios from \"axios\"\nimport Movie from \"./Movie.js\"\n\nclass App extends React.Component{\n\n  state={\n    isLoading : true,\n    movies:[]\n  };\n  getMovies=async()=>{\n    const {data:{data:{movies}}} =await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    this.setState({movies:movies,isLoading:false})\n\n    \n  };\n  componentDidMount(){\n    this.getMovies();\n\n    \n  }\n  render(){\n    const{isLoading,movies}=this.state;\n\n    return( <section class=\"container\">{isLoading ? \n    <div class=\"loader\">\n      <span class=\"loader__text\">Loading..</span>\n\n    </div> \n    :(\n      <div class=\"movies\">\n        {movies.map(movie =>\n    <Movie key={movie.id}\n    id={movie.id} \n    year={movie.year} \n    title={movie.title} \n    summary={movie.summary} \n    poster={movie.medium_cover_image}/>\n    )}\n    \n    </div>\n    )}\n    </section>\n    )}\n  }\nexport default App;                        \n"]},"metadata":{},"sourceType":"module"}